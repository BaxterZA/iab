apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-annotations:25.3.1'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'com.squareup.okhttp3:mockwebserver:3.6.0'
    testCompile 'junit:junit:4.12'

    compile project(':mraid')
}

def javaDocDir = new File(rootDir, 'docs/vast')

task prepareJavaDocDir() {
    doFirst {
        if (javaDocDir.exists()) {
            javaDocDir.deleteDir()
        }
        javaDocDir.mkdirs()
    }
}

task generateJavaDocs(dependsOn: [prepareJavaDocDir, 'bundleDebug'], type: Javadoc, group: 'doc') {
    source = android.sourceSets.main.java.srcDirs
    title = "Appodeal VAST SDK"
    destinationDir = javaDocDir
    classpath += files("${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar")
    classpath += files("${projectDir}/build/intermediates/bundles/debug/classes.jar")
    failOnError = false
    options.use = false
    options.author = false
    options.version = false
    options.noDeprecated
    options.addStringOption('Xdoclint:none', '-quiet')
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options {
        links "http://docs.oracle.com/javase/7/docs/api/"
        linksOffline "https://developer.android.com/reference","${android.sdkDirectory}/docs/reference"
    }
}

afterEvaluate {
    generateJavaDocs.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}
